/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off projeto -c projeto --vector_source="D:/repos/aoc/projeto/Waveform.vwf" --testbench_file="D:/repos/aoc/projeto/simulation/qsim/Waveform.vwf.vt"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=verilog --write_settings_files=off projeto -c projeto --vector_source="D:/repos/aoc/projeto/Waveform.vwf" --testbench_file="D:/repos/aoc/projeto/simulation/qsim/Waveform.vwf.vt"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=verilog --output_directory="D:/repos/aoc/projeto/simulation/qsim/" projeto -c projeto</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=verilog --output_directory="D:/repos/aoc/projeto/simulation/qsim/" projeto -c projeto</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vlog -work work projeto.vo
vlog -work work Waveform.vwf.vt
vsim -novopt -c -t 1ps -L cycloneive_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.project_vlg_vec_tst
vcd file -direction projeto.msim.vcd
vcd add -internal project_vlg_vec_tst/*
vcd add -internal project_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f























































</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vlog -work work projeto.vo
vlog -work work Waveform.vwf.vt
vsim -novopt -c -t 1ps -L cycloneive_ver -L altera_ver -L altera_mf_ver -L 220model_ver -L sgate_ver -L altera_lnsim_ver work.project_vlg_vec_tst
vcd file -direction projeto.msim.vcd
vcd add -internal project_vlg_vec_tst/*
vcd add -internal project_vlg_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f























































</modelsim_script_timing>
<hdl_lang>verilog</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 3000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("instruction")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instruction[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("instruction[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instruction";
}

SIGNAL("selSP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("clk0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LockMem[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("out[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessFinalPCGetter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessInitialPCGetter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("currentProcessInitialMemoryGetter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessPCGetter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configProcessSPGetter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LockPC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("addressShift[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PCShift[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R15[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configLockMemGetter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configLockPCGetter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configLockPCGetter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("PC")
{
	MEMBERS = "PC[0]", "PC[1]", "PC[2]", "PC[3]", "PC[4]", "PC[5]", "PC[6]", "PC[7]", "PC[8]", "PC[9]";
}

GROUP("out")
{
	MEMBERS = "out[0]", "out[1]", "out[2]", "out[3]", "out[4]", "out[5]", "out[6]", "out[7]", "out[8]", "out[9]";
}

GROUP("FinalPC")
{
	MEMBERS = "configProcessFinalPCGetter[0]", "configProcessFinalPCGetter[1]", "configProcessFinalPCGetter[2]", "configProcessFinalPCGetter[3]", "configProcessFinalPCGetter[4]", "configProcessFinalPCGetter[5]", "configProcessFinalPCGetter[6]", "configProcessFinalPCGetter[7]", "configProcessFinalPCGetter[8]", "configProcessFinalPCGetter[9]";
}

GROUP("InitialPC")
{
	MEMBERS = "configProcessInitialPCGetter[0]", "configProcessInitialPCGetter[1]", "configProcessInitialPCGetter[2]", "configProcessInitialPCGetter[3]", "configProcessInitialPCGetter[4]", "configProcessInitialPCGetter[5]", "configProcessInitialPCGetter[6]", "configProcessInitialPCGetter[7]", "configProcessInitialPCGetter[8]", "configProcessInitialPCGetter[9]";
}

GROUP("InitialMemory")
{
	MEMBERS = "currentProcessInitialMemoryGetter[0]", "currentProcessInitialMemoryGetter[1]", "currentProcessInitialMemoryGetter[2]", "currentProcessInitialMemoryGetter[3]", "currentProcessInitialMemoryGetter[4]", "currentProcessInitialMemoryGetter[5]", "currentProcessInitialMemoryGetter[6]", "currentProcessInitialMemoryGetter[7]", "currentProcessInitialMemoryGetter[8]", "currentProcessInitialMemoryGetter[9]";
}

GROUP("ProcessPC")
{
	MEMBERS = "configProcessPCGetter[0]", "configProcessPCGetter[1]", "configProcessPCGetter[2]", "configProcessPCGetter[3]", "configProcessPCGetter[4]", "configProcessPCGetter[5]", "configProcessPCGetter[6]", "configProcessPCGetter[7]", "configProcessPCGetter[8]", "configProcessPCGetter[9]";
}

GROUP("ProcessSP")
{
	MEMBERS = "configProcessSPGetter[0]", "configProcessSPGetter[1]", "configProcessSPGetter[2]", "configProcessSPGetter[3]", "configProcessSPGetter[4]", "configProcessSPGetter[5]", "configProcessSPGetter[6]", "configProcessSPGetter[7]", "configProcessSPGetter[8]", "configProcessSPGetter[9]";
}

GROUP("addressShift")
{
	MEMBERS = "addressShift[0]", "addressShift[1]", "addressShift[2]", "addressShift[3]", "addressShift[4]", "addressShift[5]", "addressShift[6]", "addressShift[7]", "addressShift[8]", "addressShift[9]";
}

GROUP("PCShift")
{
	MEMBERS = "PCShift[0]", "PCShift[1]", "PCShift[2]", "PCShift[3]", "PCShift[4]", "PCShift[5]", "PCShift[6]", "PCShift[7]", "PCShift[8]", "PCShift[9]";
}

GROUP("R15")
{
	MEMBERS = "R15[0]", "R15[1]", "R15[2]", "R15[3]", "R15[4]", "R15[5]", "R15[6]", "R15[7]", "R15[8]", "R15[9]";
}

GROUP("LockMem")
{
	MEMBERS = "LockMem[0]", "configLockMemGetter[1]";
}

GROUP("LockPC")
{
	MEMBERS = "configLockPCGetter[2]", "configLockPCGetter[1]", "LockPC[0]";
}

SIGNAL("configEnablePreemption[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("configEnablePreemption[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("configEnablePreemption")
{
	MEMBERS = "configEnablePreemption[0]", "configEnablePreemption[1]", "configEnablePreemption[2]", "configEnablePreemption[3]", "configEnablePreemption[4]", "configEnablePreemption[5]", "configEnablePreemption[6]", "configEnablePreemption[7]", "configEnablePreemption[8]", "configEnablePreemption[9]";
}

TRANSITION_LIST("instruction[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("instruction[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("selSP")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 2001.0;
	}
}

TRANSITION_LIST("clk0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1200;
			LEVEL 0 FOR 1.25;
			LEVEL 1 FOR 1.25;
		}
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("LockMem[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PC[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("out[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessFinalPCGetter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessInitialPCGetter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("currentProcessInitialMemoryGetter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessPCGetter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configProcessSPGetter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("LockPC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("addressShift[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("PCShift[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("R15[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configLockMemGetter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configLockPCGetter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configLockPCGetter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

TRANSITION_LIST("configEnablePreemption[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "PC[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "PC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "instruction";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "instruction[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50, 51, 52, 53, 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "out[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "selSP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LockMem";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
	CHILDREN = 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "configLockMemGetter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "LockMem[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "InitialPC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63, 64, 65, 66, 67, 68, 69, 70, 71;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessInitialPCGetter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "FinalPC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 72;
	TREE_LEVEL = 0;
	CHILDREN = 73, 74, 75, 76, 77, 78, 79, 80, 81, 82;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessFinalPCGetter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 72;
}

DISPLAY_LINE
{
	CHANNEL = "InitialMemory";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 83;
	TREE_LEVEL = 0;
	CHILDREN = 84, 85, 86, 87, 88, 89, 90, 91, 92, 93;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "currentProcessInitialMemoryGetter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 83;
}

DISPLAY_LINE
{
	CHANNEL = "ProcessPC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 94;
	TREE_LEVEL = 0;
	CHILDREN = 95, 96, 97, 98, 99, 100, 101, 102, 103, 104;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessPCGetter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 94;
}

DISPLAY_LINE
{
	CHANNEL = "ProcessSP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 105;
	TREE_LEVEL = 0;
	CHILDREN = 106, 107, 108, 109, 110, 111, 112, 113, 114, 115;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "configProcessSPGetter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "LockPC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 116;
	TREE_LEVEL = 0;
	CHILDREN = 117, 118, 119;
}

DISPLAY_LINE
{
	CHANNEL = "configLockPCGetter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "configLockPCGetter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "LockPC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 120;
	TREE_LEVEL = 0;
	CHILDREN = 121, 122, 123, 124, 125, 126, 127, 128, 129, 130;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "configEnablePreemption[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 120;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 131;
	TREE_LEVEL = 0;
	CHILDREN = 132, 133, 134, 135, 136, 137, 138, 139, 140, 141;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "addressShift[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 142;
	TREE_LEVEL = 0;
	CHILDREN = 143, 144, 145, 146, 147, 148, 149, 150, 151, 152;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "PCShift[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "R15";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 153;
	TREE_LEVEL = 0;
	CHILDREN = 154, 155, 156, 157, 158, 159, 160, 161, 162, 163;
}

DISPLAY_LINE
{
	CHANNEL = "R15[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 153;
}

DISPLAY_LINE
{
	CHANNEL = "R15[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 153;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
